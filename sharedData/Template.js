export const templates = {
  C: `// C Code\n#include <stdio.h>\n\nint main() {\n    printf("Hello, World!\\n");\n    return 0;\n}`,
  CPP14: `// C++14 Code\n#include <iostream>\nusing namespace std;\n\nint main() {\n    cout << "Hello, World!" << endl;\n    return 0;\n}`,
  CPP17: `// C++17 Code\n#include <iostream>\n#include <string_view>\n\nint main() {\n    std::string_view message = "Hello, World!";\n    std::cout << message << std::endl;\n    return 0;\n}`,
  CLOJURE: `; Clojure Code\n(defn greet [name]\n  (println (str "Hello, " name "!")))\n\n(greet "World")`,
  CSHARP: `// C# Code\nusing System;\n\nclass Program {\n    static void Main() {\n        Console.WriteLine("Hello, World!");\n    }\n}`,
  GO: `// Go Code\npackage main\n\nimport "fmt"\n\nfunc main() {\n    fmt.Println("Hello, World!")\n}`,
  HASKELL: `-- Haskell Code\nmain :: IO ()\nmain = putStrLn "Hello, World!"`,
  JAVA8: `// Java 8 Code\npublic class Main {\n    public static void main(String[] args) {\n        System.out.println("Hello, World!");\n    }\n}`,
  JAVA14: `// Java 14 Code\npublic class Main {\n    public static void main(String[] args) {\n        var message = "Hello, World!";\n        System.out.println(message);\n    }\n}`,
  JAVASCRIPT_NODE: `// JavaScript (Node.js)\nfunction greet(name) {\n    console.log(\`Hello, \${name}!\`);\n}\n\ngreet("World");`,
  KOTLIN: `// Kotlin Code\nfun main() {\n    println("Hello, World!")\n}`,

  PASCAL: `// Pascal Code\nprogram HelloWorld;\nbegin\n    writeln('Hello, World!');\nend.`,
  PERL: `# Perl Code\nuse strict;\nuse warnings;\n\nprint "Hello, World!\\n";`,

  PYTHON: `# Python 2 Code\ndef greet(name):\n    print "Hello, " + name + "!"\n\ngreet("World")`,
  PYTHON3: `# Python 3 Code\ndef greet(name):\n    print(f"Hello, {name}!")\n\ngreet("World")`,
  PYTHON3_8: `# Python 3.8 Code\ndef greet(name: str) -> None:\n    print(f"Hello, {name}!")\n\ngreet("World")`,
  R: `# R Code\ngreet <- function(name) {\n    cat("Hello,", name, "!\\n")\n}\n\ngreet("World")`,
  RUBY: `# Ruby Code\ndef greet(name)\n    puts "Hello, #{name}!"\nend\n\ngreet("World")`,
  RUST: `// Rust Code\nfn main() {\n    println!("Hello, World!");\n}`,
  SCALA: `// Scala Code\nobject Main extends App {\n    println("Hello, World!")\n}`,
  SWIFT: `// Swift Code\nimport Foundation\n\nfunc greet(name: String) {\n    print("Hello, \\(name)!")\n}\n\ngreet(name: "World")`,
  TYPESCRIPT: `// TypeScript Code\nfunction greet(name: string): void {\n    console.log(\`Hello, \${name}!\`);\n}\n\ngreet("World");`,
};
